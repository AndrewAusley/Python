# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.
# Fibonacci = 0, 1, 1, 2, 3, 5, 8, ...

fib = [1, 1]
total = 0

while fib[-1] < 4000000:
    fib.append(fib[-1] + fib[-2])
    if len(fib) % 3 == 0 and fib[-1] < 4000000:
        total += fib[-1]

print "The total sum of the even fibonacci numbers is", total

#
# def calcFib(ind):
#     if ind == 2 or ind == 1:
#         return 1
#     else:
#         return calcFib(ind - 1) + calcFib(ind - 2)
#
# index = 3
# total = 0
# evenFib = 0
#
# while evenFib < 4000000:
#     total += evenFib
#     evenFib = calcFib(index)
#     index += 3
#
# print "The last summed even fibonacci number is", evenFib
# print "The total sum of the even fibonacci numbers is", total

